# Aegis RAG System Environment Configuration
# =====================================================
# Copy this file to .env and configure the values for your environment

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Jina AI API Configuration
# Get your free API key from: https://jina.ai/?sui=apikey
# This key is required for embedding generation and document reranking
JINA_API_KEY=your_jina_api_key_here

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Vector Database Configuration
# Qdrant database connection URL
# Default: http://qdrant:6333 (Docker Compose)
# Production: Use cluster endpoint
QDRANT_URL=http://qdrant:6333

# Language Model Service Configuration  
# Ollama service endpoint for LLM inference
# Default: http://ollama:11434 (Docker Compose)
OLLAMA_URL=http://ollama:11434

# LLM Model Configuration
# Specify the model to use for text generation
# Options: deepseek-r1:7b, llama2:7b, mistral:7b, etc.
OLLAMA_MODEL=deepseek-r1:7b

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# API Server Configuration
API_HOST=0.0.0.0
API_PORT=8910
API_WORKERS=4

# Environment Settings
ENVIRONMENT=development
LOG_LEVEL=INFO
DEBUG=false

# Collection Configuration
# Vector database collection name for document storage
COLLECTION_NAME=aegis_docs_v2

# Embedding Model Configuration
# Jina AI embedding model for vector generation
EMBEDDING_MODEL=jina-embeddings-v3

# Reranking Model Configuration  
# Jina AI model for result reranking
RERANKER_MODEL=jina-reranker-v2-base-multilingual

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Retrieval Configuration
# Number of documents to retrieve in initial search
TOP_K_RETRIEVAL=10

# Number of documents to return after reranking
TOP_K_RERANK=3

# Vector Configuration
# Embedding vector dimensions (must match embedding model)
VECTOR_SIZE=1024

# Connection Pool Configuration
# Maximum number of database connections
CONNECTION_POOL_SIZE=20

# Concurrent Request Limits
MAX_CONCURRENT_REQUESTS=50

# Cache Configuration
# Time-to-live for cached responses (seconds)
CACHE_TTL_SECONDS=3600

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS Configuration
# Allowed origins for cross-origin requests
# Production: Set to specific domains
CORS_ORIGINS=["*"]

# Rate Limiting
# Maximum requests per minute per client
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# API Security
# Set to true to enable API key authentication
API_AUTH_ENABLED=false

# API key for client authentication (if enabled)
API_KEY=your_api_key_here

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Metrics Configuration
# Enable Prometheus metrics collection
PROMETHEUS_METRICS_ENABLED=true

# Metrics endpoint path
METRICS_PATH=/metrics

# Distributed Tracing
# Enable request tracing for debugging
TRACING_ENABLED=true

# Jaeger configuration for distributed tracing
JAEGER_ENDPOINT=http://jaeger:14268

# Correlation ID header name
CORRELATION_ID_HEADER=X-Correlation-ID

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Redis Configuration (Optional)
# Used for caching and session storage
REDIS_URL=redis://redis:6379

# Redis database number
REDIS_DB=0

# Redis connection timeout (seconds)
REDIS_TIMEOUT=5

# Health Check Configuration
# Health check endpoint timeout (seconds)
HEALTH_CHECK_TIMEOUT=10

# Dependency health check intervals (seconds)
DEPENDENCY_CHECK_INTERVAL=30

# =============================================================================
# BACKUP AND STORAGE CONFIGURATION
# =============================================================================

# Document Storage Path
# Local path for document storage
DOCUMENT_STORAGE_PATH=/data/raw

# Backup Configuration
# Cloud storage for backups (AWS S3, Azure Blob, etc.)
BACKUP_STORAGE_URL=s3://aegis-backups

# Backup retention period (days)
BACKUP_RETENTION_DAYS=30

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Model Loading Configuration
# GPU memory allocation for model inference
GPU_MEMORY_FRACTION=0.8

# Model cache directory
MODEL_CACHE_DIR=/models

# Batch Processing
# Maximum batch size for embedding generation
EMBEDDING_BATCH_SIZE=32

# Document processing batch size
DOCUMENT_BATCH_SIZE=10

# Request Timeout Configuration
# API request timeout (seconds)
REQUEST_TIMEOUT=300

# External API timeout (seconds)
EXTERNAL_API_TIMEOUT=30

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development Settings (Development/Testing Only)
# Enable hot reloading in development
HOT_RELOAD=true

# Enable detailed error responses
DETAILED_ERRORS=true

# Test database configuration
TEST_DATABASE_URL=http://localhost:6333

# Logging Configuration
# Log file path (optional, defaults to stdout)
LOG_FILE_PATH=/var/log/aegis/app.log

# Log rotation configuration
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5

# =============================================================================
# KUBERNETES CONFIGURATION
# =============================================================================

# Kubernetes Service Configuration (Kubernetes Deployments)
# Service discovery configuration
K8S_NAMESPACE=aegis-rag
K8S_SERVICE_ACCOUNT=aegis-api

# Pod resource limits
MEMORY_LIMIT=4Gi
CPU_LIMIT=2000m

# Health check configuration
LIVENESS_PROBE_PATH=/health
READINESS_PROBE_PATH=/health

# =============================================================================
# EXAMPLE PRODUCTION CONFIGURATION
# =============================================================================

# Production Environment Example:
# ENVIRONMENT=production
# LOG_LEVEL=INFO
# DEBUG=false
# QDRANT_URL=https://qdrant-cluster.internal.company.com:6333
# OLLAMA_URL=https://ollama-service.internal.company.com:11434
# CORS_ORIGINS=["https://app.company.com","https://admin.company.com"]
# RATE_LIMIT_REQUESTS_PER_MINUTE=50
# API_AUTH_ENABLED=true
# PROMETHEUS_METRICS_ENABLED=true
# TRACING_ENABLED=true

# =============================================================================
# CONFIGURATION VALIDATION
# =============================================================================

# The application will validate all required environment variables on startup
# Missing required variables will cause the application to exit with an error
# Optional variables will use default values if not specified

# Required variables:
# - JINA_API_KEY

# Recommended for production:
# - ENVIRONMENT=production
# - LOG_LEVEL=INFO
# - API_AUTH_ENABLED=true
# - CORS_ORIGINS (specific domains)
# - PROMETHEUS_METRICS_ENABLED=true